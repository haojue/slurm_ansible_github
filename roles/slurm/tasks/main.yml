---
- name: install munge
  yum:
    name: munge
    state: installed

- name: copy in munge key
  copy:
    src: munge.key
    dest: /etc/munge/munge.key
    owner: munge
    group: munge
    mode: 0400

- name: start service munge
  service:
    name: munge
    enabled: yes
    state: started

- name: install Slurm build dependencies
  yum:
    name:
      - gcc
      - make
      - rpm-build
      - munge-devel
      - readline-devel
      - openssl-devel
      - pam-devel
      - gtk2-devel
      - mariadb-devel
      - perl-ExtUtils-MakeMaker
      - createrepo
      - lua-devel
    state: present

- name: make home directory
  file:
    path: /mnt{{ filesystem_mount_point }}/apps/slurm
    state: directory

- name: download Slurm source
  get_url:
    url: https://download.schedmd.com/slurm/slurm-{{ slurm_version }}.tar.bz2
    dest: /mnt{{ filesystem_mount_point }}/apps/slurm/
    checksum: "{{ slurm_download_checksum }}"
  register: download_slurm_source
  when: "'management' in group_names"

- name: set rpmmacros file for parallelism
  copy:
    content: "%_smp_mflags -j {{ansible_processor_vcpus}}"
    dest: /root/.rpmmacros

- name: rpmbuild Slurm
  command: rpmbuild --clean --define "_topdir /mnt{{ filesystem_mount_point }}/apps/slurm" -ta {{ download_slurm_source.dest }}
  args:
    chdir: /tmp
    creates: /mnt{{ filesystem_mount_point }}/apps/slurm/RPMS/x86_64/slurm-{{ slurm_version }}-1.el7.x86_64.rpm
  register: rebuilt_slurm
  when: "'management' in group_names"

- name: make local Slurm repo
  command: createrepo --no-database /mnt{{ filesystem_mount_point }}/apps/slurm/RPMS/x86_64
  args:
    chdir: /mnt{{ filesystem_mount_point }}/apps/slurm/RPMS/x86_64
    creates: /mnt{{ filesystem_mount_point }}/apps/slurm/RPMS/x86_64/repodata
  when: "'management' in group_names"

- name: update Slurm repo data
  command: createrepo --no-database --update /mnt{{ filesystem_mount_point }}/apps/slurm/RPMS/x86_64
  args:
    chdir: /mnt{{ filesystem_mount_point }}/apps/slurm/RPMS/x86_64
  when: rebuilt_slurm.changed

# We want the management node to complete the build before the compute nodes continue.
# Wait for up to an hour
- name: Wait until Slurm repo has been created by the mangement node
  wait_for:
    path: /mnt/shared/apps/slurm/RPMS/x86_64/repodata/repomd.xml
    timeout: 3600
  when: "'management' not in group_names"

- name: Add repository
  yum_repository:
    name: slurm
    description: Slurm
    baseurl: file:/mnt{{ filesystem_mount_point }}/apps/slurm/RPMS/x86_64
    gpgcheck: no

- name: install Slurm base package
  yum: name=slurm-{{ slurm_version }}-1.el7.x86_64 state=present

- name: install Slurm
  yum: name=slurm-{{item}}-{{ slurm_version }}-1.el7.x86_64 state=present
  loop: "{{ slurm_packages }}"

- name: create slurm config directory
  file:
    path: /etc/slurm
    state: directory
    mode: 0755

- name: create slurm group
  group:
    name: slurm
    state: present

- name: create slurm user
  user:
    name: slurm
    comment: Slurm controller user
    group: slurm

- name: slurm config file
  template:
    src: slurm.conf.j2
    dest: /etc/slurm/slurm.conf
    owner: slurm
    group: slurm
    mode: 0644
  notify:
    - restart slurmd
    - restart slurmctld

- name: slurm config file (shared)
  template:
    src: slurm_shared.conf.j2
    dest: /mnt/shared/apps/slurm/slurm.conf
    owner: slurm
    group: slurm
    mode: 0644
  when: "'management' in group_names"
  notify:
    - restart slurmd
    - restart slurmctld

- name: slurmdbd config file
  template:
    src: slurmdbd.conf.j2
    dest: /etc/slurm/slurmdbd.conf
    owner: slurm
    group: slurm
    mode: 0400
  notify:
    - restart slurmctld
    - restart slurmdbd

- name: cgroup config file
  template:
    src: cgroup.conf.j2
    dest: /etc/slurm/cgroup.conf
    owner: slurm
    group: slurm
    mode: 0400
  notify:
    - restart slurmd
    - restart slurmctld

- name: set slurm log directory permissions
  file:
    path: /var/log/slurm/
    state: directory
    owner: slurm
    group: slurm
    mode: 0755

- name: set slurm spool directory permissions
  file:
    path: /var/spool/slurm/
    state: directory
    owner: slurm
    group: slurm
    mode: 0755

- name: set slurmd config directory permissions
  file:
    path: /var/spool/slurmd/
    state: directory
    owner: slurm
    group: slurm
    mode: 0755

- name: open firewall for slurm
  firewalld:
    port: 6817-6818/tcp
    permanent: true
    state: enabled
  notify:
    - restart firewalld
    - restart slurmctld
    - restart slurmd

- name: open all ports within subnet
  firewalld:
    rich_rule: 'rule family="ipv4" source address="10.0.0.0/8" accept'
    permanent: true
    state: enabled
  notify:
    - restart firewalld

- include_tasks: elastic.yml
  when: "'management' in group_names"

- name: start service slurmdbd
  service:
    name: slurmdbd
    state: started
    enabled: yes
  when: "'management' in group_names"

- name: start service slurmctld
  service:
    name: slurmctld
    state: started
    enabled: yes
  when: "'management' in group_names"

- name: Wait until Slurm config file has been created by the mangement node
  wait_for:
    path: /mnt/shared/apps/slurm/slurm.conf
    timeout: 300
  when: "'management' not in group_names"

- name: start service slurmd
  service:
    name: slurmd
    state: started
    enabled: yes
  when: "'management' not in group_names"

- name: create accounting cluster
  command: sacctmgr --immediate add cluster {{ slurm_cluster_name }}
  register: create_cluster_result
  changed_when: "create_cluster_result.rc == 0"
  failed_when: "create_cluster_result.rc != 0 and create_cluster_result.stdout != ' This cluster {{ slurm_cluster_name }} already exists.  Not adding.'"
  when: "'management' in group_names"
